<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite ignored="0" hostname="LAPTOP-0QTDGNSP" failures="0" tests="4" name="FireFoxTest" time="3.845" errors="0" timestamp="2022-06-03T00:29:16 IST">
  <testcase classname="testclasses.VerifyUserCanBuyProduct" name="@BeforeClass BeforeClass" time="3.721">
    <failure type="org.openqa.selenium.SessionNotCreatedException" message="Could not start a new session. Response code 500. Message: Expected browser binary location, but unable to find binary in default location, no &amp;apos;moz:firefoxOptions.binary&amp;apos; capability provided, and no binary flag set on the command line
Build info: version: &amp;apos;4.1.3&amp;apos;, revision: &amp;apos;7b1ebf28ef&amp;apos;
System info: host: &amp;apos;LAPTOP-0QTDGNSP&amp;apos;, ip: &amp;apos;192.168.98.24&amp;apos;, os.name: &amp;apos;Windows 11&amp;apos;, os.arch: &amp;apos;amd64&amp;apos;, os.version: &amp;apos;10.0&amp;apos;, java.version: &amp;apos;17.0.2&amp;apos;
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Command: [null, newSession {capabilities=[Capabilities {acceptInsecureCerts: true, browserName: firefox, moz:debuggerAddress: true, moz:firefoxOptions: {}}], desiredCapabilities=Capabilities {acceptInsecureCerts: true, browserName: firefox, moz:debuggerAddress: true, moz:firefoxOptions: {}}}]">
      <![CDATA[org.openqa.selenium.SessionNotCreatedException: Could not start a new session. Response code 500. Message: Expected browser binary location, but unable to find binary in default location, no 'moz:firefoxOptions.binary' capability provided, and no binary flag set on the command line
Build info: version: '4.1.3', revision: '7b1ebf28ef'
System info: host: 'LAPTOP-0QTDGNSP', ip: '192.168.98.24', os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.2'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Command: [null, newSession {capabilities=[Capabilities {acceptInsecureCerts: true, browserName: firefox, moz:debuggerAddress: true, moz:firefoxOptions: {}}], desiredCapabilities=Capabilities {acceptInsecureCerts: true, browserName: firefox, moz:debuggerAddress: true, moz:firefoxOptions: {}}}]
at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:126)
at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:84)
at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:62)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:156)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:167)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:142)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:567)
at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:248)
at org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:164)
at org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:118)
at org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:106)
at org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:86)
at baseclasses.Base_Class.getDriver(Base_Class.java:25)
at testclasses.VerifyUserCanBuyProduct.BeforeClass(VerifyUserCanBuyProduct.java:25)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
... Removed 16 stack frames]]>
    </failure>
  </testcase> <!-- @BeforeClass BeforeClass -->
  <testcase classname="testclasses.VerifyUserCanBuyProduct" name="@BeforeMethod beforeMethod" time="-1.654196356447E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="testclasses.VerifyUserCanBuyProduct" name="@AfterMethod afterMethod" time="-1.654196356461E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="testclasses.VerifyUserCanBuyProduct" name="@BeforeMethod beforeMethod" time="-1.654196356465E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="testclasses.VerifyUserCanBuyProduct" name="@AfterMethod afterMethod" time="-1.654196356473E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="testclasses.VerifyUserCanBuyProduct" name="@BeforeMethod beforeMethod" time="-1.654196356476E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="testclasses.VerifyUserCanBuyProduct" name="@AfterMethod afterMethod" time="-1.654196356485E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="testclasses.VerifyUserCanBuyProduct" name="@BeforeMethod beforeMethod" time="-1.65419635649E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="testclasses.VerifyUserCanBuyProduct" name="@AfterMethod afterMethod" time="-1.654196356501E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="testclasses.VerifyUserCanBuyProduct" name="@AfterClass afterClass" time="-1.654196356515E9">
    <skipped/>
  </testcase> <!-- @AfterClass afterClass -->
  <testcase classname="testclasses.VerifyUserCanBuyProduct" name="Test" time="0.0">
    <skipped/>
  </testcase> <!-- Test -->
  <testcase classname="testclasses.VerifyUserCanBuyProduct" name="Test" time="0.0">
    <skipped/>
  </testcase> <!-- Test -->
  <testcase classname="testclasses.VerifyUserCanBuyProduct" name="Test" time="0.0">
    <skipped/>
  </testcase> <!-- Test -->
  <testcase classname="testclasses.VerifyUserCanBuyProduct" name="VerifyUserCanloginOrNot" time="0.0">
    <skipped/>
  </testcase> <!-- VerifyUserCanloginOrNot -->
</testsuite> <!-- FireFoxTest -->
